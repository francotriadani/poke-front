{"ast":null,"code":"import _objectSpread from\"C:/Users/Usuario/Desktop/poke-front/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{GET_POKEMONS,GET_POKEMON_ID,GET_TYPES,FILTER_POKEMONS_TYPE,FILTER_FROM,ORDER_NAME,ORDEN_ATAQUE,GET_POKEMON_NAME}from\"./Actions\";var initialState={pokemons:[],allpokemons:[],types:[],detail:[]};var rootReducer=function rootReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_POKEMONS:return _objectSpread(_objectSpread({},state),{},{pokemons:action.payload,allpokemons:action.payload,detail:[]});case GET_POKEMON_ID:return _objectSpread(_objectSpread({},state),{},{detail:action.payload});case GET_TYPES:return _objectSpread(_objectSpread({},state),{},{types:action.payload});case FILTER_POKEMONS_TYPE:var pokeTotal=state.allpokemons;var pokemonesfilter=action.payload===\"Todos\"?pokeTotal:pokeTotal.filter(function(poke){return poke.tipo.includes(action.payload);});return _objectSpread(_objectSpread({},state),{},{pokemons:pokemonesfilter});case FILTER_FROM:if(action.payload===\"todos\")return _objectSpread(_objectSpread({},state),{},{pokemons:state.allpokemons});var pokeFiltrados=action.payload===\"creados\"?state.allpokemons.filter(function(poke){return poke.creadoDb===true;}):state.allpokemons.filter(function(poke){return!poke.creadoDb;});return _objectSpread(_objectSpread({},state),{},{pokemons:pokeFiltrados});case ORDER_NAME:var ordenados=[];if(action.payload===\"numerico\"){ordenados=state.pokemons.sort(function(a,b){if(a.id>b.id){return 1;}if(a.id<b.id){return-1;}});}if(action.payload===\"nombreAz\"){ordenados=state.pokemons.sort(function(a,b){if(a.nombre.toLowerCase()>b.nombre.toLowerCase()){return 1;}if(a.nombre.toLowerCase()<b.nombre.toLowerCase()){return-1;}return 0;});}if(action.payload===\"nombreZa\"){ordenados=state.pokemons.sort(function(a,b){if(a.nombre.toLowerCase()>b.nombre.toLowerCase()){return-1;}if(a.nombre.toLowerCase()<b.nombre.toLowerCase()){return 1;}return 0;});}return _objectSpread(_objectSpread({},state),{},{pokemons:ordenados});case ORDEN_ATAQUE:var orden=[];if(action.payload===\"ataqueAz\"){orden=state.pokemons.sort(function(a,b){if(parseInt(a.ataque)>parseInt(b.ataque)){return 1;}if(parseInt(a.ataque)<parseInt(b.ataque)){return-1;}return 0;});}if(action.payload===\"ataqueZa\"){orden=state.pokemons.sort(function(a,b){if(parseInt(a.ataque)>parseInt(b.ataque)){return-1;}if(parseInt(a.ataque)<parseInt(b.ataque)){return 1;}return 0;});}return _objectSpread(_objectSpread({},state),{},{pokemons:orden});case GET_POKEMON_NAME:return _objectSpread(_objectSpread({},state),{},{pokemons:action.payload});case\"POST_POKEMON\":return _objectSpread({},state);case\"DELETE_POKEMON\":return _objectSpread({},state);default:return _objectSpread({},state);}};export default rootReducer;","map":{"version":3,"names":["GET_POKEMONS","GET_POKEMON_ID","GET_TYPES","FILTER_POKEMONS_TYPE","FILTER_FROM","ORDER_NAME","ORDEN_ATAQUE","GET_POKEMON_NAME","initialState","pokemons","allpokemons","types","detail","rootReducer","state","arguments","length","undefined","action","type","_objectSpread","payload","pokeTotal","pokemonesfilter","filter","poke","tipo","includes","pokeFiltrados","creadoDb","ordenados","sort","a","b","id","nombre","toLowerCase","orden","parseInt","ataque"],"sources":["C:/Users/Usuario/Desktop/poke-front/client/src/Components/Redux/Reducer.js"],"sourcesContent":["import { GET_POKEMONS,GET_POKEMON_ID, GET_TYPES,FILTER_POKEMONS_TYPE,FILTER_FROM,ORDER_NAME,ORDEN_ATAQUE,GET_POKEMON_NAME} from \"./Actions\";\r\n\r\nconst initialState = {\r\n    pokemons: [],\r\n    allpokemons: [],\r\n    types: [],\r\n    detail: [],\r\n}\r\n\r\n\r\nconst rootReducer = (state=initialState, action)=>{\r\n    switch(action.type){\r\n        case GET_POKEMONS:\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload,\r\n                allpokemons:action.payload,\r\n                detail: [],\r\n            }\r\n        case GET_POKEMON_ID:\r\n            return {\r\n              ...state,\r\n              detail: action.payload,\r\n            };\r\n        \r\n\r\n        case GET_TYPES:\r\n            return {\r\n                ...state,\r\n                types: action.payload,\r\n            }\r\n\r\n        case FILTER_POKEMONS_TYPE:\r\n            const pokeTotal = state.allpokemons;\r\n            const pokemonesfilter =\r\n                action.payload === \"Todos\"\r\n                ? pokeTotal\r\n                : pokeTotal.filter((poke) => poke.tipo.includes(action.payload));\r\n            return {\r\n                ...state,\r\n                pokemons: pokemonesfilter,\r\n            }\r\n\r\n        case FILTER_FROM:\r\n            if (action.payload === \"todos\")\r\n                return {\r\n                ...state,\r\n                pokemons: state.allpokemons,\r\n                };\r\n            const pokeFiltrados =\r\n                action.payload === \"creados\"\r\n                ? state.allpokemons.filter((poke) => poke.creadoDb === true)\r\n                : state.allpokemons.filter((poke) => !poke.creadoDb);\r\n            return {\r\n                ...state,\r\n                pokemons: pokeFiltrados,\r\n            };\r\n\r\n        case ORDER_NAME:\r\n\r\n            let ordenados = [];\r\n            if (action.payload === \"numerico\"){\r\n                ordenados = state.pokemons.sort(function(a,b){\r\n                    if(a.id > b.id){\r\n                        return 1;\r\n                    }\r\n                    if (a.id < b.id){\r\n                        return -1;\r\n                    }\r\n                })\r\n            }\r\n            if (action.payload === \"nombreAz\") {\r\n                ordenados = state.pokemons.sort(function (a, b) {\r\n                if (a.nombre.toLowerCase() > b.nombre.toLowerCase()) {\r\n                    return 1;\r\n                }\r\n                if (a.nombre.toLowerCase() < b.nombre.toLowerCase()) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n                });\r\n            }\r\n            if (action.payload === \"nombreZa\") {\r\n                ordenados = state.pokemons.sort((a, b) => {\r\n                if (a.nombre.toLowerCase() > b.nombre.toLowerCase()) {\r\n                    return -1;\r\n                }\r\n                if (a.nombre.toLowerCase() < b.nombre.toLowerCase()) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n                });\r\n            }\r\n        \r\n            return {\r\n                ...state,\r\n                pokemons: ordenados,\r\n            };\r\n\r\n        case ORDEN_ATAQUE:\r\n            let orden = [];\r\n            if (action.payload === \"ataqueAz\") {\r\n                orden = state.pokemons.sort(function (a, b) {\r\n            if (parseInt(a.ataque) > parseInt(b.ataque)) {\r\n                return 1;\r\n            }\r\n            if (parseInt(a.ataque) < parseInt(b.ataque)) {\r\n                return -1;\r\n            }\r\n                return 0;\r\n            });\r\n            }\r\n\r\n            if (action.payload === \"ataqueZa\") {\r\n                orden = state.pokemons.sort((a, b) => {\r\n                if (parseInt(a.ataque) > parseInt(b.ataque)) {\r\n                    return -1;\r\n                }\r\n                if (parseInt(a.ataque) < parseInt(b.ataque)) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n                });\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                pokemons: orden,\r\n            };\r\n\r\n        case GET_POKEMON_NAME:\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload,\r\n            };\r\n\r\n        case \"POST_POKEMON\":\r\n            return {\r\n                ...state,\r\n            };\r\n\r\n        case \"DELETE_POKEMON\":\r\n            return {\r\n                ...state,\r\n            };\r\n        \r\n            \r\n        default:\r\n            return{...state}\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}