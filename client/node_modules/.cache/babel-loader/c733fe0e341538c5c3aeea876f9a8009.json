{"ast":null,"code":"const initialState = {\n  pokemons: [],\n  types: [],\n  pokeonesFull: [],\n  detail: []\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"GET_POKEMONS\":\n      return {\n        ...state,\n        pokemons: action.payload,\n        pokeonesFull: action.payload,\n        detail: []\n      };\n\n    /*case \"GET_POKEMON_ID\":\r\n      return {\r\n        ...state,\r\n        detail: action.payload,\r\n      };\r\n        case \"GET_TYPES\":\r\n      return {\r\n        ...state,\r\n        types: action.payload,\r\n      };\r\n        case \"FILTER_POKEMONS_TYPE\":\r\n      const pokeTotal = state.pokeonesFull;\r\n      const pokemonesfilter =\r\n        action.payload === \"Todos\"\r\n          ? pokeTotal\r\n          : pokeTotal.filter((poke) => poke.tipo.includes(action.payload));\r\n      return {\r\n        ...state,\r\n        pokemons: pokemonesfilter,\r\n      };\r\n        case \"FILTER_FROM\":\r\n      if (action.payload === \"todos\")\r\n        return {\r\n          ...state,\r\n          pokemons: state.pokeonesFull,\r\n        };\r\n      const pokeFiltrados =\r\n        action.payload === \"creados\"\r\n          ? state.pokeonesFull.filter((poke) => poke.creadoDb === true)\r\n          : state.pokeonesFull.filter((poke) => !poke.creadoDb);\r\n      return {\r\n        ...state,\r\n        pokemons: pokeFiltrados,\r\n      };\r\n        case \"ORDER_NAME\":\r\n      let ordenados = [];\r\n      if (action.payload === \"nombreAz\") {\r\n        ordenados = state.pokemons.sort(function (a, b) {\r\n          if (a.nombre.toLowerCase() > b.nombre.toLowerCase()) {\r\n            return 1;\r\n          }\r\n          if (a.nombre.toLowerCase() < b.nombre.toLowerCase()) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n      if (action.payload === \"nombreZa\") {\r\n        ordenados = state.pokemons.sort((a, b) => {\r\n          if (a.nombre.toLowerCase() > b.nombre.toLowerCase()) {\r\n            return -1;\r\n          }\r\n          if (a.nombre.toLowerCase() < b.nombre.toLowerCase()) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n          return {\r\n        ...state,\r\n        pokemons: ordenados,\r\n      };\r\n        case \"ORDEN_ATAQUE\":\r\n      let orden = [];\r\n      if (action.payload === \"ataqueAz\") {\r\n        orden = state.pokemons.sort(function (a, b) {\r\n          if (parseInt(a.ataque) > parseInt(b.ataque)) {\r\n            return 1;\r\n          }\r\n          if (parseInt(a.ataque) < parseInt(b.ataque)) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n      if (action.payload === \"ataqueZa\") {\r\n        orden = state.pokemons.sort((a, b) => {\r\n          if (parseInt(a.ataque) > parseInt(b.ataque)) {\r\n            return -1;\r\n          }\r\n          if (parseInt(a.ataque) < parseInt(b.ataque)) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n          return {\r\n        ...state,\r\n        pokemons: orden,\r\n      };\r\n        case \"GET_POKEMON_NAME\":\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload,\r\n      };\r\n        case \"POST_POKEMON\":\r\n      return {\r\n        ...state,\r\n      };\r\n        // case \"LIMPIAR_DETALLE\":\r\n    //   return{\r\n    //     ...state,\r\n    //     detail: action.payload\r\n    //   }\r\n    case \"DELETE_POKEMON\":\r\n      return {\r\n        ...state,\r\n      };*/\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["initialState","pokemons","types","pokeonesFull","detail","rootReducer","state","arguments","length","undefined","action","type","payload"],"sources":["C:/Users/Usuario/Desktop/Pokemon PI/PI-Pokemon-main/client/src/Components/Redux/Reducer.js"],"sourcesContent":["const initialState = {\r\n    pokemons: [],\r\n    types: [],\r\n    pokeonesFull: [],\r\n    detail: [],\r\n  };\r\n  \r\n  function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n      case \"GET_POKEMONS\":\r\n        return {\r\n          ...state,\r\n          pokemons: action.payload,\r\n          pokeonesFull: action.payload,\r\n          detail: [],\r\n        };\r\n  \r\n      /*case \"GET_POKEMON_ID\":\r\n        return {\r\n          ...state,\r\n          detail: action.payload,\r\n        };\r\n  \r\n      case \"GET_TYPES\":\r\n        return {\r\n          ...state,\r\n          types: action.payload,\r\n        };\r\n  \r\n      case \"FILTER_POKEMONS_TYPE\":\r\n        const pokeTotal = state.pokeonesFull;\r\n        const pokemonesfilter =\r\n          action.payload === \"Todos\"\r\n            ? pokeTotal\r\n            : pokeTotal.filter((poke) => poke.tipo.includes(action.payload));\r\n        return {\r\n          ...state,\r\n          pokemons: pokemonesfilter,\r\n        };\r\n  \r\n      case \"FILTER_FROM\":\r\n        if (action.payload === \"todos\")\r\n          return {\r\n            ...state,\r\n            pokemons: state.pokeonesFull,\r\n          };\r\n        const pokeFiltrados =\r\n          action.payload === \"creados\"\r\n            ? state.pokeonesFull.filter((poke) => poke.creadoDb === true)\r\n            : state.pokeonesFull.filter((poke) => !poke.creadoDb);\r\n        return {\r\n          ...state,\r\n          pokemons: pokeFiltrados,\r\n        };\r\n  \r\n      case \"ORDER_NAME\":\r\n        let ordenados = [];\r\n        if (action.payload === \"nombreAz\") {\r\n          ordenados = state.pokemons.sort(function (a, b) {\r\n            if (a.nombre.toLowerCase() > b.nombre.toLowerCase()) {\r\n              return 1;\r\n            }\r\n            if (a.nombre.toLowerCase() < b.nombre.toLowerCase()) {\r\n              return -1;\r\n            }\r\n            return 0;\r\n          });\r\n        }\r\n        if (action.payload === \"nombreZa\") {\r\n          ordenados = state.pokemons.sort((a, b) => {\r\n            if (a.nombre.toLowerCase() > b.nombre.toLowerCase()) {\r\n              return -1;\r\n            }\r\n            if (a.nombre.toLowerCase() < b.nombre.toLowerCase()) {\r\n              return 1;\r\n            }\r\n            return 0;\r\n          });\r\n        }\r\n  \r\n        return {\r\n          ...state,\r\n          pokemons: ordenados,\r\n        };\r\n  \r\n      case \"ORDEN_ATAQUE\":\r\n        let orden = [];\r\n        if (action.payload === \"ataqueAz\") {\r\n          orden = state.pokemons.sort(function (a, b) {\r\n            if (parseInt(a.ataque) > parseInt(b.ataque)) {\r\n              return 1;\r\n            }\r\n            if (parseInt(a.ataque) < parseInt(b.ataque)) {\r\n              return -1;\r\n            }\r\n            return 0;\r\n          });\r\n        }\r\n        if (action.payload === \"ataqueZa\") {\r\n          orden = state.pokemons.sort((a, b) => {\r\n            if (parseInt(a.ataque) > parseInt(b.ataque)) {\r\n              return -1;\r\n            }\r\n            if (parseInt(a.ataque) < parseInt(b.ataque)) {\r\n              return 1;\r\n            }\r\n            return 0;\r\n          });\r\n        }\r\n  \r\n        return {\r\n          ...state,\r\n          pokemons: orden,\r\n        };\r\n  \r\n      case \"GET_POKEMON_NAME\":\r\n        return {\r\n          ...state,\r\n          pokemons: action.payload,\r\n        };\r\n  \r\n      case \"POST_POKEMON\":\r\n        return {\r\n          ...state,\r\n        };\r\n  \r\n      // case \"LIMPIAR_DETALLE\":\r\n      //   return{\r\n      //     ...state,\r\n      //     detail: action.payload\r\n      //   }\r\n      case \"DELETE_POKEMON\":\r\n        return {\r\n          ...state,\r\n        };*/\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  export default rootReducer;\r\n  "],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,EAAE;EACTC,YAAY,EAAE,EAAE;EAChBC,MAAM,EAAE;AACV,CAAC;AAED,SAASC,WAAWA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjB,OAAO;QACL,GAAGL,KAAK;QACRL,QAAQ,EAAES,MAAM,CAACE,OAAO;QACxBT,YAAY,EAAEO,MAAM,CAACE,OAAO;QAC5BR,MAAM,EAAE;MACV,CAAC;;IAEH;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAWM;MACE,OAAOE,KAAK;EAAC;AAEnB;AAEA,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}