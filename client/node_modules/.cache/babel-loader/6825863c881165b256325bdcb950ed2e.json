{"ast":null,"code":"import { GET_POKEMONS, GET_TYPES, FILTER_POKEMONS_TYPE, FILTER_FROM, ORDER_NAME } from \"./Actions\";\nconst initialState = {\n  pokemons: [],\n  allpokemons: [],\n  types: [],\n  detail: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload,\n        allpokemons: action.payload,\n        detail: []\n      };\n    case GET_TYPES:\n      return {\n        ...state,\n        types: action.payload\n      };\n    case FILTER_POKEMONS_TYPE:\n      const pokeTotal = state.allpokemons;\n      const pokemonesfilter = action.payload === \"Todos\" ? pokeTotal : pokeTotal.filter(poke => poke.tipo.includes(action.payload));\n      return {\n        ...state,\n        pokemons: pokemonesfilter\n      };\n    case FILTER_FROM:\n      if (action.payload === \"todos\") return {\n        ...state,\n        pokemons: state.allpokemons\n      };\n      const pokeFiltrados = action.payload === \"creados\" ? state.allpokemons.filter(poke => poke.creadoDb === true) : state.allpokemons.filter(poke => !poke.creadoDb);\n      return {\n        ...state,\n        pokemons: pokeFiltrados\n      };\n    case ORDER_NAME:\n      let ordenados = [];\n      if (action.payload === \"nombreAz\") {\n        ordenados = state.pokemons.sort(function (a, b) {\n          if (a.nombre.toLowerCase() > b.nombre.toLowerCase()) {\n            return 1;\n          }\n          if (a.nombre.toLowerCase() < b.nombre.toLowerCase()) {\n            return -1;\n          }\n          return 0;\n        });\n      }\n      if (action.payload === \"nombreZa\") {\n        ordenados = state.pokemons.sort((a, b) => {\n          if (a.nombre.toLowerCase() > b.nombre.toLowerCase()) {\n            return -1;\n          }\n          if (a.nombre.toLowerCase() < b.nombre.toLowerCase()) {\n            return 1;\n          }\n          return 0;\n        });\n      }\n      return {\n        ...state,\n        pokemons: ordenados\n      };\n    case \"ORDEN_ATAQUE\":\n      let orden = [];\n      if (action.payload === \"ataqueAz\") {\n        orden = state.pokemons.sort(function (a, b) {\n          if (parseInt(a.ataque) > parseInt(b.ataque)) {\n            return 1;\n          }\n          if (parseInt(a.ataque) < parseInt(b.ataque)) {\n            return -1;\n          }\n          return 0;\n        });\n      }\n      if (action.payload === \"ataqueZa\") {\n        orden = state.pokemons.sort((a, b) => {\n          if (parseInt(a.ataque) > parseInt(b.ataque)) {\n            return -1;\n          }\n          if (parseInt(a.ataque) < parseInt(b.ataque)) {\n            return 1;\n          }\n          return 0;\n        });\n      }\n      return {\n        ...state,\n        pokemons: orden\n      };\n    case \"GET_POKEMON_NAME\":\n      return {\n        ...state,\n        pokemons: action.payload\n      };\n    case \"POST_POKEMON\":\n      return {\n        ...state\n      };\n    case \"DELETE_POKEMON\":\n      return {\n        ...state\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_POKEMONS","GET_TYPES","FILTER_POKEMONS_TYPE","FILTER_FROM","ORDER_NAME","initialState","pokemons","allpokemons","types","detail","rootReducer","state","arguments","length","undefined","action","type","payload","pokeTotal","pokemonesfilter","filter","poke","tipo","includes","pokeFiltrados","creadoDb","ordenados","sort","a","b","nombre","toLowerCase","orden","parseInt","ataque"],"sources":["C:/Users/Usuario/Desktop/Pokemon PI/PI-Pokemon-main/client/src/Components/Redux/Reducer.js"],"sourcesContent":["import { GET_POKEMONS, GET_TYPES,FILTER_POKEMONS_TYPE,FILTER_FROM,ORDER_NAME} from \"./Actions\";\r\n\r\nconst initialState = {\r\n    pokemons: [],\r\n    allpokemons: [],\r\n    types: [],\r\n    detail: [],\r\n}\r\n\r\n\r\nconst rootReducer = (state=initialState, action)=>{\r\n    switch(action.type){\r\n        case GET_POKEMONS:\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload,\r\n                allpokemons:action.payload,\r\n                detail:[]\r\n            }\r\n        case GET_TYPES:\r\n            return {\r\n                ...state,\r\n                types: action.payload,\r\n            }\r\n\r\n        case FILTER_POKEMONS_TYPE:\r\n            const pokeTotal = state.allpokemons;\r\n            const pokemonesfilter =\r\n                action.payload === \"Todos\"\r\n                ? pokeTotal\r\n                : pokeTotal.filter((poke) => poke.tipo.includes(action.payload));\r\n            return {\r\n                ...state,\r\n                pokemons: pokemonesfilter,\r\n            }\r\n\r\n        case FILTER_FROM:\r\n            if (action.payload === \"todos\")\r\n                return {\r\n                ...state,\r\n                pokemons: state.allpokemons,\r\n                };\r\n            const pokeFiltrados =\r\n                action.payload === \"creados\"\r\n                ? state.allpokemons.filter((poke) => poke.creadoDb === true)\r\n                : state.allpokemons.filter((poke) => !poke.creadoDb);\r\n            return {\r\n                ...state,\r\n                pokemons: pokeFiltrados,\r\n            };\r\n\r\n            case ORDER_NAME:\r\n                let ordenados = [];\r\n                if (action.payload === \"nombreAz\") {\r\n                  ordenados = state.pokemons.sort(function (a, b) {\r\n                    if (a.nombre.toLowerCase() > b.nombre.toLowerCase()) {\r\n                      return 1;\r\n                    }\r\n                    if (a.nombre.toLowerCase() < b.nombre.toLowerCase()) {\r\n                      return -1;\r\n                    }\r\n                    return 0;\r\n                  });\r\n                }\r\n                if (action.payload === \"nombreZa\") {\r\n                  ordenados = state.pokemons.sort((a, b) => {\r\n                    if (a.nombre.toLowerCase() > b.nombre.toLowerCase()) {\r\n                      return -1;\r\n                    }\r\n                    if (a.nombre.toLowerCase() < b.nombre.toLowerCase()) {\r\n                      return 1;\r\n                    }\r\n                    return 0;\r\n                  });\r\n                }\r\n          \r\n                return {\r\n                  ...state,\r\n                  pokemons: ordenados,\r\n                };\r\n\r\n            case \"ORDEN_ATAQUE\":\r\n                let orden = [];\r\n                if (action.payload === \"ataqueAz\") {\r\n                orden = state.pokemons.sort(function (a, b) {\r\n                if (parseInt(a.ataque) > parseInt(b.ataque)) {\r\n                    return 1;\r\n                }\r\n                if (parseInt(a.ataque) < parseInt(b.ataque)) {\r\n                    return -1;\r\n                }\r\n                    return 0;\r\n                });\r\n                }\r\n\r\n                if (action.payload === \"ataqueZa\") {\r\n                    orden = state.pokemons.sort((a, b) => {\r\n                    if (parseInt(a.ataque) > parseInt(b.ataque)) {\r\n                        return -1;\r\n                    }\r\n                    if (parseInt(a.ataque) < parseInt(b.ataque)) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                    });\r\n                }\r\n\r\n                return {\r\n                ...state,\r\n                pokemons: orden,\r\n                };\r\n\r\n            case \"GET_POKEMON_NAME\":\r\n                return {\r\n                    ...state,\r\n                    pokemons: action.payload,\r\n                };\r\n\r\n            case \"POST_POKEMON\":\r\n                return {\r\n        ...state,\r\n      };\r\n\r\n    case \"DELETE_POKEMON\":\r\n      return {\r\n        ...state,\r\n      };\r\n          \r\n            \r\n        default:\r\n            return{...state}\r\n    }\r\n\r\n}\r\n\r\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}